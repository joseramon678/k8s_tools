---
  apiVersion: v1
  kind: Pod
  metadata:
    labels:
      run: backend
    name: backend
    namespace: default
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: backend
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-worker-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
---
  apiVersion: v1
  kind: Pod
  metadata:
    labels:
      run: frontend
    name: frontend
    namespace: default
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: frontend
      resources: {}
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-worker-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
---
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      run: backend
    name: backend
    namespace: default
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      run: backend
    sessionAffinity: None
    type: ClusterIP
---
  apiVersion: v1
  kind: Service
  metadata:
    labels:
      run: frontend
    name: frontend
    namespace: default
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      run: frontend
    sessionAffinity: None
    type: ClusterIP
---
  apiVersion: v1
  kind: Service
  metadata:
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
  spec:
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
